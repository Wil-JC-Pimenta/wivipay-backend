global:
  scrape_interval: 15s
  evaluation_interval: 15s

rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # WiviPay Gateway Application
- job_name: 'wivipay-gateway'
    metrics_path: '/api/actuator/prometheus'
    static_configs:
      - targets: ['localhost:8082']
    scrape_interval: 10s
    scrape_timeout: 5s
    honor_labels: true
    
    # Relabeling para adicionar labels customizados
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(?::\d+)?'
        replacement: '${1}'
      
      - source_labels: [__address__]
        target_label: service
        replacement: 'wivipay-gateway'
      
      - source_labels: [__address__]
        target_label: environment
        replacement: 'development'

  # PostgreSQL Database
  - job_name: 'postgres'
    static_configs:
      - targets: ['localhost:9187']
    scrape_interval: 30s

  # RabbitMQ
  - job_name: 'rabbitmq'
    static_configs:
      - targets: ['localhost:15692']
    scrape_interval: 30s

  # Keycloak (se tiver métricas expostas)
  - job_name: 'keycloak'
    static_configs:
      - targets: ['localhost:8180']
    metrics_path: '/metrics'
    scrape_interval: 60s

# Alerting rules para WiviPay
rule_files:
  - 'wivipay-alerts.yml'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Recording rules para métricas customizadas
recording_rules:
  - record: wivipay:payments:success_rate
    expr: rate(wivipay_payments_authorizations_total[5m]) / (rate(wivipay_payments_authorizations_total[5m]) + rate(wivipay_payments_failures_total[5m]))
  
  - record: wivipay:customers:growth_rate
    expr: rate(wivipay_customers_creations_total[1h])
  
  - record: wivipay:credit_cards:active_count
    expr: wivipay_credit_cards_total
  
  - record: wivipay:transactions:volume_total
    expr: sum(wivipay_payments_amount_total)
  
  - record: wivipay:errors:error_rate
    expr: rate(wivipay_errors_total[5m])
  
  - record: wivipay:response_time:p95
    expr: histogram_quantile(0.95, rate(wivipay_payments_processing_time_seconds_bucket[5m]))
  
  - record: wivipay:response_time:p99
    expr: histogram_quantile(0.99, rate(wivipay_payments_processing_time_seconds_bucket[5m]))

# Configuração de storage
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 10GB

# Configuração de WAL
wal:
  dir: /prometheus/wal
  retention.period: 24h

# Configuração de exemplos de métricas
# Estas são as métricas que esperamos ver do WiviPay Gateway:
# - wivipay_payments_authorizations_total
# - wivipay_payments_captures_total
# - wivipay_payments_refunds_total
# - wivipay_payments_failures_total
# - wivipay_payments_processing_time_seconds
# - wivipay_customers_creations_total
# - wivipay_customers_updates_total
# - wivipay_customers_deletions_total
# - wivipay_customers_operation_time_seconds
# - wivipay_credit_cards_creations_total
# - wivipay_credit_cards_updates_total
# - wivipay_credit_cards_deletions_total
# - wivipay_credit_cards_operation_time_seconds
# - wivipay_transaction_logs_created_total
# - wivipay_errors_total
